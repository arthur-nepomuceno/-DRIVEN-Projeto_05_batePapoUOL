=====================================================================================
=============================== ENTRADA NA SALA =====================================
=====================================================================================

https://mock-api.driven.com.br/api/v6/uol/participants

Para entrar na sala, deve-se enviar ao servidor o nome do usuário.
Para isso, envie uma requisição POST para a URL, REviando um objeto no formato:

{
  name: "João"
}

O servidor pode responder com status `400` se já houver um usuário online
com esse nome. Se for o caso, a aplicação deve pedir um novo nome até que
o servidor responda com status `200`.

=====================================================================================
=============================== MANTER CONEXÃO ======================================
=====================================================================================

https://mock-api.driven.com.br/api/v6/uol/status

O servidor precisa saber que o usuário continua online.
Se o usuário não envia nenhuma mensagem, como ele pode inferir se o usuário
continua ou não na página?

Para resolver isso, o servidor espera que seu sistema avise continuamente
que o usuário permanece utilizando o chat. Para isso, o sistema deve enviar
uma requisição `POST` para a URL, enviando um objeto no formato:

{
  name: "João"
}

Enviando o nome do usuário que foi pedido ao entrar na página.
Esta requisição deve ser feita a cada 5s.

=====================================================================================
=============================== BUSCAR MENSAGENS ====================================
=====================================================================================

https://mock-api.driven.com.br/api/v6/uol/messages

Para buscar mensagens do servidor, mande uma requisição GET para a URL.
A resposta será um array de objetos, como o seguinte:

[
	{
		from: "João",
		to: "Todos",
		text: "entra na sala...",
		type: "status",
		time: "08:01:17"
	},
	{
		from: "João",
		to: "Todos",
		text: "Bom dia",
		type: "message",
		time: "08:02:50"
	},
]

Nos objetos, o campo `type` identifica o tipo da mensagem.
Existem os seguintes valores:

- `status`: mensagem de estado, como entrou ou saiu da sala
- `message`: mensagem pública
- `private_message`: mensagem particular

=====================================================================================
============================= ENVIO DE MENSAGEM =====================================
=====================================================================================

https://mock-api.driven.com.br/api/v6/uol/messages

Para enviar mensagens, você deve fazer uma requisição POST para a URL.
Nesta requisição, você deve enviar um objeto como o seguinte:

{
	from: "nome do usuário",
	to: "nome do destinatário (Todos se não for um específico)",
	text: "mensagem digitada",
	type: "message" // ou "private_message" para o bônus
}

=====================================================================================
========================== BÔNUS: BUSCAR PARTICIPANTES ==============================
=====================================================================================

https://mock-api.driven.com.br/api/v6/uol/participants

Para buscar a lista de participantes, envie uma requisição GET para a URL.
Esta requisição retornará um array de objetos no formato:

[
	{
		name: "João"
	},
	{
		name: "Maria"
	}
]